# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL to answer a set of questions.

1# Who are the top 10 artists based on popularity?

select artist_name, popularity
from BIT_DB.Spotifydata
order by popularity asc
Limit 10;

2# What's the average danceability for the 10 most popular songs?

select artist_name, avg(danceability)
from BIT_DB.Spotifydata
group by artist_name
limit 10;

3# What is the average danceability by artist and track?

select artist_name,track_name,avg(popularity),avg(danceability),avg(energy)
from BIT_DB.spotifydata
group by artist_name, track_name;

4# Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.

with popularity_avg_cte as (select artist_name, avg (popularity) 
as avg_popularity from SpotifyData
group by artist_name)

select artist_name, avg_popularity, 'Top Star' as tag
from popularity_avg_cte
where avg_popularity >=90;



